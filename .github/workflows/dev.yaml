name: np-dev

on:
  pull_request:

env:
  NP_PREFIX: dev
  GKE_CLUSTER: ${{ secrets.NODEPEN_GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.NODEPEN_GKE_ZONE }}
  DOCKER_TAG_PREFIX: gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/
  DOCKER_TAG_SUFFIX: :next-${{ github.sha }}

jobs:
  dependencies-lib:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "npm"
          cache-dependency-path: lib/package-lock.json
      - name: Build glib
        working-directory: ./lib
        run: |
          npm ci
          npm run build
      - name: Upload glib artifacts
        uses: actions/upload-artifact@master
        with:
          name: glib
          path: |
            lib/
            !lib/node_modules/
          retention-days: 1
  dependencies-gate:
    runs-on: ubuntu-latest
    needs:
      - dependencies-lib

    steps:
      - name: Assert success
        run: echo ðŸŽ‰
  test-app:
    runs-on: ubuntu-latest
    needs:
      - dependencies-gate

    env:
      NEXT_PUBLIC_NP_API_ENDPOINT: https://api.dev.nodepen.io/graphql

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "npm"
          cache-dependency-path: app/package-lock.json
      - name: Download glib artifacts
        uses: actions/download-artifact@v2
        with:
          name: glib
          path: app/glib/
      - name: Restore glib dependencies
        working-directory: ./app/glib
        run: npm ci
      - name: Restore app dependencies
        working-directory: ./app
        run: npm ci
      - name: Restore client secrets
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "firebase.client.auth.json"
          dir: "app/features/common/context/session/auth/"
          json: ${{ secrets.NODEPEN_APP_SECRET_AUTH }}
      - name: Restore server secrets
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "firebase.server.auth.json"
          dir: "app/features/common/context/session/auth/"
          json: ${{ secrets.NODEPEN_API_SECRET_AUTH }}
      - name: Build app
        working-directory: ./app
        run: |
          npm run build:ci
  # test-gate:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - test-app

  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Assert success
  #       run: echo ðŸŽ‰
  # build-app:
  #   needs: [ test-gate ]
  #   runs-on: ubuntu-latest
  #   env:
  #     DOCKER_TAG:
  #     DOCKET_TAG_VERBOSE:
  #   steps:

# jobs:
#   build-lib:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2
#         with:
#           node-version: "12"
#       - name: Build glib
#         working-directory: ./lib
#         run: |
#           npm ci
#           npm run build
#       - name: Upload glib artifacts
#         uses: actions/upload-artifact@master
#         with:
#           name: glib
#           path: |
#             lib/
#             !lib/node_modules/
#           retention-days: 1
#   build-app:
#     runs-on: ubuntu-latest
#     needs: [build-lib]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2
#         with:
#           node-version: "12"
#       - name: Download glib artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: glib
#           path: app/glib/
#       - name: Restore glib dependencies
#         working-directory: ./app/glib
#         run: npm ci
#       - name: Restore app secrets
#         uses: jsdaniell/create-json@1.1.2
#         with:
#           name: "firebase.client.auth.json"
#           dir: "app/features/common/context/session/auth/"
#           json: ${{ secrets.NODEPEN_APP_SECRET_AUTH }}
#       - uses: google-github-actions/setup-gcloud@master
#         with:
#           project_id: ${{ secrets.NODEPEN_GCP_PROJECT_ID }}
#           service_account_key: ${{ secrets.NODEPEN_GCP_TOKEN }}
#           export_default_credentials: true
#       - name: Setup GCR
#         run: gcloud auth configure-docker
#       - uses: docker/build-push-action@v2
#         with:
#           context: ./app
#           push: true
#           tags: |
#             gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-app:next-${{ github.sha }}
#             gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-app:next
#   build-api:
#     runs-on: ubuntu-latest
#     needs: [build-lib]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2
#         with:
#           node-version: "12"
#       - name: Download glib artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: glib
#           path: api/glib/
#       - name: Restore glib dependencies
#         working-directory: ./api/glib
#         run: npm ci
#       - name: Restore api secrets
#         uses: jsdaniell/create-json@1.1.2
#         with:
#           name: "auth.json"
#           dir: "api/src/firebase/auth/"
#           json: ${{ secrets.NODEPEN_API_SECRET_AUTH }}
#       - uses: google-github-actions/setup-gcloud@master
#         with:
#           project_id: ${{ secrets.NODEPEN_GCP_PROJECT_ID }}
#           service_account_key: ${{ secrets.NODEPEN_GCP_TOKEN }}
#           export_default_credentials: true
#       - name: Setup GCR
#         run: gcloud auth configure-docker
#       - uses: docker/build-push-action@v2
#         with:
#           context: ./api
#           push: true
#           tags: |
#             gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-api:next-${{ github.sha }}
#             gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-api:next
#   build-gh-dispatch:
#     runs-on: self-hosted
#     needs: [build-lib]
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Download glib artifacts
#         uses: actions/download-artifact@v2
#         with:
#           name: glib
#           path: gh/dispatch/glib/
#       - name: Restore glib dependencies
#         working-directory: ./gh/dispatch/glib
#         run: npm ci
#       - name: Build np-gh-dispatch
#         run: |
#           cd gh/dispatch
#           docker build -t gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-gh-dispatch:next-${{ github.sha }} .
#           docker push gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-gh-dispatch:next-${{ github.sha }}
#           docker tag gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-gh-dispatch:next-${{ github.sha }} gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-gh-dispatch:next
#           docker push gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-gh-dispatch:next
#   build-gh-compute:
#     runs-on: self-hosted
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Build np-gh-compute
#         run: |
#           cd gh/compute
#           docker build -t gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-gh-compute:next-${{ github.sha }} --build-arg NODEPEN_RHINO_TOKEN=${{ secrets.NODEPEN_RHINO_TOKEN }} .
#           docker push gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-gh-compute:next-${{ github.sha }}
#           docker tag gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-gh-compute:next-${{ github.sha }} gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-gh-compute:next
#           docker push gcr.io/${{ secrets.NODEPEN_GCP_PROJECT_ID }}/np-gh-compute:next
